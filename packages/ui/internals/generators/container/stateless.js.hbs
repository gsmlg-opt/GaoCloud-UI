/**
 *
 * {{ properCase name }}
 *
 */
import React, { useEffect, useState, memo } from 'react';
import PropTypes from 'prop-types';
import { createStructuredSelector } from 'reselect';
import { bindActionCreators, compose } from 'redux';
import { connect } from 'react-redux';

{{#if wantHeaders}}
import {{ properCase name }}Helmet from 'components/Helmet/Helmet';
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
{{/if}}
import CssBaseline from '@material-ui/core/CssBaseline';

import { makeSelect{{ duck }} } from 'ducks/{{ duck }}/selectors';
import * as actions from 'ducks/{{ duck }}/actions';

import useStyles from './styles';
{{#if wantMessages}}
import messages from './messages';
{{/if}}

const {{ properCase name }} = (props) => {
  const classes = useStyles(props);

  return (
    <div className={classes.root}>
    {{#if wantHeaders}}
      <{{ properCase name }}Helmet />
    {{/if}}
      <CssBaseline />
      <div className={classes.content}>
      {{#if wantMessages}}
        <FormattedMessage {...messages.header} />
      {{/if}}
      </div>
    </div>
  );
}

const mapStateToProps = createStructuredSelector({
});

const mapDispatchToProps = (dispatch) =>
  bindActionCreators(
    {
      ...actions,
    },
    dispatch,
  );

const withConnect = connect(mapStateToProps, mapDispatchToProps);

export default compose(
  withConnect,
  meno,
)({{ properCase name }});
