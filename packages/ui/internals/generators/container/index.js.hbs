/**
 *
 * {{ properCase name }}
 *
 */
import React from 'react';
import PropTypes from 'prop-types';
import { createStructuredSelector } from 'reselect';
import { bindActionCreators, compose } from 'redux';
import { connect } from 'react-redux';
import { withStyles } from '@material-ui/core/styles';

{{#if wantHeaders}}
import {{ properCase name }}Helmet from 'components/Helmet/Helmet';
{{/if}}
{{#if wantMessages}}
import { FormattedMessage } from 'react-intl';
{{/if}}
import CssBaseline from '@material-ui/core/CssBaseline';

import { makeSelect{{ duck }} } from 'ducks/{{ duck }}/selectors';
import * as actions from 'ducks/{{ duck }}/actions';

{{#if wantMessages}}
import messages from './messages';
{{/if}}
import { styles } from './styles';

/* eslint-disable react/prefer-stateless-function */
export class {{ properCase name }} extends {{{ type }}} {
  static propTypes = {
  };

  render() {
    return (
      <div className={classes.root}>
      {{#if wantHeaders}}
        <{{ properCase name }}Helmet title={messages.pageTitle} description={messages.pageDesc} />
      {{/if}}
        <CssBaseline />
        <div className={classes.content}>
        {{#if wantMessages}}
          <FormattedMessage {...messages.header} />
        {{/if}}
        </div>
      </div>
    );
  }
}

const mapStateToProps = createStructuredSelector({
});

const mapDispatchToProps = (dispatch) =>
  bindActionCreators(
    {
      ...actions,
    },
    dispatch,
  );

const withConnect = connect(mapStateToProps, mapDispatchToProps);

export default compose(
  withConnect,
  withStyles(styles),
)({{ properCase name }});
